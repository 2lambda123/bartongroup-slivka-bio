#!/bin/bash
### BEGIN INIT INFO
# Provides:          slivka
# Required-Start:
# Required-Stop:
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: slivka
# Description:       slivka
### END INIT INFO


SLIVKA_USER=www-slivka


PROJECT_DIR=$(su -c 'echo ${HOME}/slivka-bio' ${SLIVKA_USER})
[ -d ${PROJECT_DIR} ] || (echo "Project doesn't exist"; exit 3)
PID_PATH="${PROJECT_DIR}/run"
[ -d ${PID_PATH} ] || mkdir ${PID_PATH} || exit 3
PYTHON=$(su - -c '. activate slivka; echo `which python`' ${SLIVKA_USER})


function start {
    case $1 in
        server)
            local PID_FILE="$PID_PATH/slivka-server.pid";;
        scheduler)
            local PID_FILE="$PID_PATH/slivka-scheduler.pid";;
        worker)
            local PID_FILE="$PID_PATH/slivka-workers.pid";;
        all|"")
            start "server"
            start "scheduler"
            start "worker"
            return 0;;
        *)
            echo "Invalid parameter \"$1\"; use: $0 start {server|scheduler|worker|all}."
            return 1
    esac
    if [ -e ${PID_FILE} ] && kill -0 $(cat ${PID_FILE}); then
        echo "Slivka $1 already running."
        return 2
    fi
    echo "Starting Slivka $1"
    pushd ${PROJECT_DIR}
    ${PYTHON} "manage.py" $1 > /dev/null 2>&1 &
    echo $! > ${PID_FILE}
    popd
    echo "Slivka $1 Started"
    return 0
}


function stop {
    case $1 in
        server)
            local PID_FILE="$PID_PATH/slivka-server.pid";;
        scheduler)
            local PID_FILE="$PID_PATH/slivka-scheduler.pid";;
        worker)
            local PID_FILE="$PID_PATH/slivka-workers.pid";;
        all|"")
            stop "server"
            stop "scheduler"
            stop "worker"
            return 0;;
        *)
            echo "Invalid parameter \"$1\"; use: $0 stop {server|scheduler|worker|all}."
            return 1
    esac
    if [ ! -e ${PID_FILE} ] || ! kill -0 $(cat ${PID_FILE}); then
        echo "Slivka $1 is not running."
        return 2
    fi
    local PID=$(cat ${PID_FILE})
    kill -15 ${PID} 2> /dev/null
    local COUNT=0
    echo -ne "Stopping $1"
    while kill -0 ${PID} 2> /dev/null && [ ${COUNT} -le 10 ]; do
        sleep 0.5
        COUNT=$[$COUNT+1]
        echo -ne "."
    done
    echo
    if kill -0 ${PID} 2> /dev/null; then
        echo "Slivka $1 is still running with PID=$PID"
    else
        rm ${PID_FILE}
        echo "Slivka $1 stopped successfully"
    fi
    return 0
}

echo $1 $2

case $1 in
start) start $2;;
stop) stop $2;;
restart) stop $2; start $2;;
*)
    echo "Invalid parameter \"$1\"; use: $0 {start|stop|restart} {server|scheduler|worker|all}"
    exit 1
esac
exit $?
